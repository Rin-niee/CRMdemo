from aiogram.types import CallbackQuery, InlineKeyboardButton, InlineKeyboardMarkup, FSInputFile
from utils.data import(
    get_company_info,
)


async def show_order_info(callback: CallbackQuery, order: dict, state=None):
    """
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–∫–∞–∑–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–µ–π—Å—Ç–≤–∏–π.
    
    Args:
        callback: CallbackQuery —Å –Ω–∞–∂–∞—Ç–æ–π –∫–Ω–æ–ø–∫–æ–π
        order: —Å–ª–æ–≤–∞—Ä—å —Å –¥–∞–Ω–Ω—ã–º–∏ –∑–∞–∫–∞–∑–∞
        state: FSMContext, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ —Ä–∞–±–æ—Ç–∞—Ç—å —Å —Å–æ—Å—Ç–æ—è–Ω–∏—è–º–∏ (–º–æ–∂–Ω–æ None)
    """
    try:
        order_text = f"üöó –ó–∞–∫–∞–∑ #{order.get('id')}\n"
        order_text += f"URL: {order.get('url_users', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}\n"
        order_company = await get_company_info(order.get("company_id"))
        if order_company:
            info_parts = []
            info_parts.append(
                "–ö–æ–º–ø–∞–Ω–∏—è: " + (order_company.get("name") or "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ") +
                "\n–ò–ù–ù: " + (order_company.get("INN") or "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ") +
                "\n–ê–¥—Ä–µ—Å: " + (order_company.get("OGRN") or "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ") +
                "\n–¢–µ–ª–µ—Ñ–æ–Ω: " + (order_company.get("phone") or "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ") +
                "\nE-mail: " + (order_company.get("email") or "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
            )
            order_text += info_parts
        buttons = [
            [InlineKeyboardButton(text="‚úÖ –ù–∞—á–∞—Ç—å", callback_data=f"start_{order['id']}")],
            [InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="my_requests")]
        ]
        kb = InlineKeyboardMarkup(inline_keyboard=buttons)

        await callback.message.edit_text(order_text, reply_markup=kb)
        
        await callback.answer()
    except Exception as e:
        await callback.message.answer(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}")
        await callback.answer()