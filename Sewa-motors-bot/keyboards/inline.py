from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from utils.data import (
    get_companies,
    get_open_orders_older_than,
    get_my_order
    )


def get_main_menu_keyboard():
    return InlineKeyboardMarkup(
        inline_keyboard=[[InlineKeyboardButton(text="üì¶ –í—ã–±—Ä–∞—Ç—å –∑–∞–∫–∞–∑", callback_data="select_order")]]
    )


def get_help_menu_keyboard(user_id: int) -> InlineKeyboardMarkup:
    open_orders = get_open_orders_older_than(60)
    my_orders = get_my_order(user_id)
    count = len(open_orders)
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(text="üìã –ö–æ–º–ø–∞–Ω–∏–∏", callback_data="select_order"),
                InlineKeyboardButton(text=f"üìù –ú–æ–∏ –∑–∞—è–≤–∫–∏({my_orders})", callback_data="my_orders_menu"),
                InlineKeyboardButton(text=f"üïß –û—Ç–∫—Ä—ã—Ç—ã–µ –∑–∞—è–≤–∫–∏ ({count})", callback_data="orderplan_menu"),
                InlineKeyboardButton(text=f"üôÖ‚Äç‚ôÇÔ∏è –û—Ç–∫–∞–∑–∞—Ç—å—Å—è –æ—Ç –∑–∞–∫–∞–∑–∞", callback_data="all_my_orders"),
            ]
        ]
    )


def get_companies_keyboard():
    companies = get_companies()
    buttons = [
        [InlineKeyboardButton(text=company["name"], callback_data=f"company_{company['id']}")]
        for company in companies
    ]
    buttons.append([InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="back_to_menu")])
    return InlineKeyboardMarkup(inline_keyboard=buttons)


def get_companies_with_disabled_keyboard(companies):
    buttons = [[InlineKeyboardButton(text=c["name"], callback_data=f"open_company_{c['id']}")] for c in companies]
    buttons.append([InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="back_to_menu")])
    return InlineKeyboardMarkup(inline_keyboard=buttons)


def get_disabled_orders_keyboard(orders):
    return InlineKeyboardMarkup(
        inline_keyboard=
            [[InlineKeyboardButton(text=f"{o.get('brand','')} {o.get('model','')}", callback_data=f"open_order_{o['id']}")]
             for o in orders] +
            [[InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –∫–æ–º–ø–∞–Ω–∏—è–º", callback_data="openorders_back_companies")]]
    )


def get_orders_keyboard(orders, back_button: bool = False):
    buttons = [
        [
            InlineKeyboardButton(
                text=f"{o.get('brand','')} {o.get('model','')}".strip(), callback_data=str(o["id"]) 
            )
        ]
        for o in orders
    ]
    if back_button:
        buttons.append([InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –∫–æ–º–ø–∞–Ω–∏—è–º", callback_data="back_to_companies")])
    return InlineKeyboardMarkup(inline_keyboard=buttons)


def get_orders_with_opened_keyboard(orders: list) -> InlineKeyboardMarkup:
    def _format_opened(val):
        s = str(val or "")
        return s.split(".")[0]

    inline_buttons = []
    for o in orders:
        text = f"{o.get('brand') or '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è'} {o.get('model') or ''} {o.get('year') or ''}"
        if o.get('manager_id'):
            text += f"‚Äî –º–µ–Ω–µ–¥–∂–µ—Ä {o.get('manager_id')} –≤—ã–µ—Ö–∞–ª –Ω–∞ —Å—ä–µ–º–∫—É" 
        inline_buttons.append([InlineKeyboardButton(text=text, callback_data=f"order_time_{o.get('id')}")])

    return InlineKeyboardMarkup(inline_keyboard=inline_buttons)

#–º–µ–Ω—é –æ—Ç–∫–∞–∑–∞ –æ—Ç –∑–∞–∫–∞–∑–∞
def get_orders_with_opened_keyboard_for_decline(orders: list) -> InlineKeyboardMarkup:
    def _format_opened(val):
        s = str(val or "")
        return s.split(".")[0]

    inline_buttons = []
    for o in orders:
        text = f"{o.get('brand') or '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è'} {o.get('model') or ''} {o.get('year') or ''}"
        inline_buttons.append([InlineKeyboardButton(text=text, callback_data=f"decline_order_{o.get('id')}")])

    return InlineKeyboardMarkup(inline_keyboard=inline_buttons)


def get_order_info_keyboard(context="company"):
    if context == "status":
        return InlineKeyboardMarkup(
            inline_keyboard=[
                [InlineKeyboardButton(text="üì∏ –ó–∞–≥—Ä—É–∑–∏—Ç—å –æ—Å–º–æ—Ç—Ä", callback_data="start_photo_session")],
                [InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ —Å—Ç–∞—Ç—É—Å–∞–º", callback_data="back_to_status_filter")],
            ]
        )
    return InlineKeyboardMarkup(
        inline_keyboard=[[InlineKeyboardButton(text="üì∏ –ó–∞–≥—Ä—É–∑–∏—Ç—å –æ—Å–º–æ—Ç—Ä", callback_data="start_photo_session")]]
    )


def get_photo_stage_keyboard(stage_info, context="company"):
    buttons = []
    current_stage = stage_info.get("stage_num", 1)
    total_stages = stage_info.get("total_stages", 2)

    if current_stage < total_stages:
        buttons.append([InlineKeyboardButton(text="‚û°Ô∏è –°–ª–µ–¥—É—é—â–∏–π —ç—Ç–∞–ø", callback_data="next_stage")])
    else:
        buttons.append([InlineKeyboardButton(text="‚úÖ –ó–∞–≤–µ—Ä—à–∏—Ç—å —Å—ä–µ–º–∫—É", callback_data="next_stage")])

    buttons.append(
        [
            InlineKeyboardButton(
                text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –∑–∞–∫–∞–∑–∞–º" if context != "status" else "‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ —Å—Ç–∞—Ç—É—Å–∞–º",
                callback_data="back_to_orders" if context != "status" else "back_to_status_filter",
            )
        ]
    )

    return InlineKeyboardMarkup(inline_keyboard=buttons)


def get_filtered_orders_keyboard(orders):
    status_emoji = {"progress": "üü°", "done": "üü¢", "open": "üîµ"}
    buttons = [
        [
            InlineKeyboardButton(text=f"{status_emoji.get(o['status'],'‚ö™')} {o['model']}", callback_data=f"order_status_{o['id']}")
        ]
        for o in orders
    ]
    buttons.append([InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ —Å—Ç–∞—Ç—É—Å–∞–º", callback_data="back_to_status_filter")])
    return InlineKeyboardMarkup(inline_keyboard=buttons)


def get_upload_keyboard(include_back: bool = False):
    buttons = [[InlineKeyboardButton(text="‚úÖ –ó–∞–≤–µ—Ä—à–∏—Ç—å –∑–∞–≥—Ä—É–∑–∫—É", callback_data="finish_upload")]]
    if include_back:
        buttons.append([InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –∑–∞–∫–∞–∑–∞–º", callback_data="back_to_orders")])
    return InlineKeyboardMarkup(inline_keyboard=buttons)


def get_back_to_menu_keyboard():
    return InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text="–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_menu")]])


def get_precheck_decision_keyboard():
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="üì∏–ó–∞–≥—Ä—É–∑–∏—Ç—å –æ—Å–º–æ—Ç—Ä", callback_data="precheck_start")],
            [InlineKeyboardButton(text="üóí –ù—É–∂–Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è", callback_data="precheck_need_consult")],
        ]
    )


def get_precheck_manager_keyboard(order_id: str):
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="üìπ –ó–∞–ø—Ä–æ—Å–∏—Ç—å –∫–æ—Ä–æ—Ç–∫–æ–µ –≤–∏–¥–µ–æ", callback_data=f"precheck_req_video_{order_id}")],
            [InlineKeyboardButton(text="‚ñ∂Ô∏è –ü—Ä–æ–¥–æ–ª–∂–∞–π –æ—Å–º–æ—Ç—Ä", callback_data=f"precheck_continue_{order_id}")],
        ]
    )


def get_precheck_after_video_keyboard(order_id: str):
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="‚ñ∂Ô∏è –ü—Ä–æ–¥–æ–ª–∂–∞–π –æ—Å–º–æ—Ç—Ä", callback_data=f"precheck_continue_{order_id}")],
            [InlineKeyboardButton(text="üí¨ –°–≤—è–∑–∞—Ç—å—Å—è —Å –æ—Å–º–æ—Ç—Ä—â–∏–∫–æ–º", callback_data=f"precheck_chat_{order_id}")],
            [InlineKeyboardButton(text="‚õîÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ—Å–º–æ—Ç—Ä", callback_data=f"precheck_stop_{order_id}")],
        ]
    )


def get_customer_decision_keyboard(order_id: str):
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="üïô –ó–∞–∫–∞–∑—á–∏–∫ –Ω–µ –æ—Ç–≤–µ—Ç–∏–ª", callback_data=f"cust_no_answer_{order_id}")],
            [InlineKeyboardButton(text="‚õîÔ∏è –ù–µ –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å –æ—Å–º–æ—Ç—Ä", callback_data=f"cust_stop_{order_id}")],
            [InlineKeyboardButton(text="‚úÖ –ü—Ä–æ–¥–æ–ª–∂–∞—Ç—å (—Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–º)", callback_data=f"cust_continue_{order_id}")],
        ]
    )


def get_precheck_manager_reply_keyboard(order_id: str) -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="üí¨ –û—Ç–≤–µ—Ç–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É", callback_data=f"manager_reply_{order_id}")]
        ]
    )


def get_order_status_keyboard():
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="üîµ –û—Ç–∫—Ä—ã—Ç—ã–µ", callback_data="status_open")],
            [
                InlineKeyboardButton(
                    text="üü° –í –ø—Ä–æ—Ü–µ—Å—Å–µ", callback_data="status_progress"
                )
            ],
            [InlineKeyboardButton(text="üü¢ –ó–∞–≤–µ—Ä—à—ë–Ω–Ω—ã–µ", callback_data="status_done")],
        ]
    )


def get_my_orders_keyboard(orders):
    status_emoji = {"progress": "üü°", "done": "üü¢", "open": "üîµ"}
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text=f"{status_emoji.get(o['status'],'‚ö™')} {o['model']}",
                    callback_data=f"order_{o['status']}_{o['id']}",
                )
            ]
            for o in orders
        ]
    )


def get_deadline_orders_keyboard(orders):
    return InlineKeyboardMarkup(inline_keyboard=[])


def get_checklist_question_keyboard(qnum: int) -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(text="‚úÖ –î–∞", callback_data=f"chk:{qnum}:yes"),
                InlineKeyboardButton(text="‚ùå –ù–µ—Ç", callback_data=f"chk:{qnum}:no"),
            ]
        ]
    )


def get_checklist_multichoice_keyboard(
    qnum: int, options: list[tuple[str, str]]
) -> InlineKeyboardMarkup:
    rows = [
        [InlineKeyboardButton(text=label, callback_data=f"chk:{qnum}:{code}")]
        for label, code in options
    ]
    return InlineKeyboardMarkup(inline_keyboard=rows)


def get_admin_order_keyboard(order_id: str) -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∑–∞–∫–∞–∑",
                    callback_data=f"admin_confirm_{order_id}",
                )
            ],
            [
                InlineKeyboardButton(
                    text="üìù –î–æ–ø. –∑–∞–¥–∞–Ω–∏–µ –∏ –¥–æ—Ä–∞–±–æ—Ç–∫–∞",
                    callback_data=f"admin_rework_with_task_{order_id}",
                )
            ],
            [
                InlineKeyboardButton(
                    text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="back_to_menu"
                )
            ],
        ]
    )
